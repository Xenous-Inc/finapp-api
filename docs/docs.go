// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Alexander Drednought",
            "email": "ask@dr3dnought.ru"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "In success case returns Access JWT Token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Try to sign in user",
                "parameters": [
                    {
                        "description": "Credentials input",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/classrooms/": {
            "get": {
                "description": "Return list of classrooms which found by provided query term",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "classrooms"
                ],
                "summary": "Return List of classrooms",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom search mask",
                        "name": "term",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Classroom"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/groups/": {
            "get": {
                "description": "Return list of student groups which found by provided query term",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "groups"
                ],
                "summary": "Return List of groups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group search mask",
                        "name": "term",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Group"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/classroom": {
            "get": {
                "description": "Returns schedule for provided classroom Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return schedule for provided classroom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/classroom/mini": {
            "get": {
                "description": "Returns schedule in compact format for provided classroom Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return mini schedule for provided classroom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Classroom ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MiniScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/group": {
            "get": {
                "description": "Returns schedule for provided group Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return schedule for provided group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/group/mini": {
            "get": {
                "description": "Returns schedule in compact format for provided teacher Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return mini schedule for provided group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MiniScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/teacher": {
            "get": {
                "description": "Returns schedule for provided teacher Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return schedule for provided teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/schedule/teacher/mini": {
            "get": {
                "description": "Returns schedule in compact format for provided teacher Id and time interval",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schedule"
                ],
                "summary": "Return mini schedule for provided teacher",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start date",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MiniScheduleItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/teachers/": {
            "get": {
                "description": "Return list of teachers which found by provided query term",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "teachers"
                ],
                "summary": "Return List of teachers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Teacher search mask",
                        "name": "term",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Teacher"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/card": {
            "get": {
                "description": "In success case returns user student card",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user student card",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "2262777",
                        "name": "profileId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/StudentCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/group": {
            "get": {
                "description": "In success case returns user group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user group",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StudentItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiError"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/orders": {
            "get": {
                "description": "In success case returns user orders list",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user orders",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "description": "In success case returns user profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/profile/details": {
            "get": {
                "description": "In success case returns detailed user profile",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get detailed user profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ProfileDetails"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/recordbook": {
            "get": {
                "description": "In success case returns user recordBookItem",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user recordBookItem",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecordBookItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiError"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/studyplan": {
            "get": {
                "description": "In success case returns user studyPlan",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user studyPlan",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StudyPlan"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiError"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        },
        "/user/teacherGroup": {
            "get": {
                "description": "In success case returns user teacher group",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Try to get user teacher group",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer \u003cAdd access token here\u003e",
                        "description": "Insert your access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TeacherGroup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ApiError"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Validation error"
                }
            }
        },
        "Classroom": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string",
                    "example": "25 | Филиалы Челябинский филиал | Лекционная"
                },
                "id": {
                    "type": "string",
                    "example": "3587"
                },
                "title": {
                    "type": "string",
                    "example": "24"
                }
            }
        },
        "Group": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string",
                    "example": "Финансовый факультет | Очная"
                },
                "id": {
                    "type": "string",
                    "example": "110694"
                },
                "title": {
                    "type": "string",
                    "example": "ФФ21-1"
                }
            }
        },
        "LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "Bibt8877"
                },
                "username": {
                    "type": "string",
                    "example": "227789"
                }
            }
        },
        "LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9"
                }
            }
        },
        "MiniScheduleItem": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2023.11.27"
                },
                "lessonType": {
                    "type": "string",
                    "example": "Лекции"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "approveDate": {
                    "type": "string",
                    "example": "2023.09.01"
                },
                "date": {
                    "type": "string",
                    "example": "2023.09.01"
                },
                "id": {
                    "type": "integer",
                    "example": 192754
                },
                "number": {
                    "type": "string",
                    "example": "3569/у-с"
                },
                "title": {
                    "type": "string",
                    "example": "О переводе обучающихся на следующий курс (безусловно, условно)"
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "faculty": {
                    "type": "string",
                    "example": "Финансовый факультет"
                },
                "group": {
                    "type": "string",
                    "example": "ФФ22-4"
                },
                "id": {
                    "type": "integer",
                    "example": 93492
                },
                "image": {
                    "type": "string",
                    "example": "https://org.fa.ru/bitrix/galaktika/galaktika.vuzapi/public/files/users/89105/ctn-25001.281474976824101_optimized.jpg"
                },
                "name": {
                    "type": "string",
                    "example": "Дредноут Александр Дмитриевич"
                },
                "ticket": {
                    "type": "string",
                    "example": "226299"
                }
            }
        },
        "ProfileDetails": {
            "type": "object",
            "properties": {
                "course": {
                    "type": "integer",
                    "example": 2
                },
                "direction": {
                    "type": "string",
                    "example": "Экономика"
                },
                "faculty": {
                    "type": "string",
                    "example": "Финансовый факультет"
                },
                "form": {
                    "type": "string",
                    "example": "Очная"
                },
                "group": {
                    "type": "string",
                    "example": "ФФ22-4"
                },
                "group_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "example": 93492
                },
                "level": {
                    "type": "string",
                    "example": "Бакалавр"
                },
                "name": {
                    "type": "string",
                    "example": "Дредноут Александр Дмитриевич"
                },
                "semester": {
                    "type": "integer",
                    "example": 3
                },
                "ticket": {
                    "type": "string",
                    "example": "226299"
                }
            }
        },
        "RecordBookItem": {
            "type": "object",
            "properties": {
                "semesters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordBookSemesterItem"
                    }
                }
            }
        },
        "RecordBookSemesterItem": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_dto.RecordBookSemesterItemData"
                    }
                },
                "semester": {
                    "type": "integer"
                }
            }
        },
        "ScheduleItem": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "ул. Олеко Дундича, 23"
                },
                "classroom": {
                    "type": "string",
                    "example": "ОД/341"
                },
                "date": {
                    "type": "string",
                    "example": "2023.11.27"
                },
                "endsAt": {
                    "type": "string",
                    "example": "11:40"
                },
                "lecturer": {
                    "type": "string",
                    "example": "Бердышев Александр Валентинович"
                },
                "lesson": {
                    "type": "string",
                    "example": "Иностранный язык"
                },
                "lessonNumberEnd": {
                    "type": "integer",
                    "example": 1
                },
                "lessonNumberStart": {
                    "type": "integer",
                    "example": 1
                },
                "lessonType": {
                    "type": "string",
                    "example": "Лекции"
                },
                "startsAt": {
                    "type": "string",
                    "example": "10:10"
                },
                "weekDay": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "SemesterSection": {
            "type": "object",
            "properties": {
                "terms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_Xenous-Inc_finapp-api_internal_dto.Term"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "StudentCard": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://org.fa.ru/upload/temp/49e6475a8dedba8800cbb8170f5fab30.pdf"
                }
            }
        },
        "StudentItem": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string",
                    "example": "https://org.fa.ru/bitrix/galaktika/galaktika.vuzapi/public/files/users/83066/25001.281474976821736_optimized.jpg"
                },
                "id": {
                    "type": "integer",
                    "example": 87436
                },
                "name": {
                    "type": "string",
                    "example": "Шереметьев Александр Дмитриевич"
                },
                "userId": {
                    "type": "integer",
                    "example": 83066
                }
            }
        },
        "StudyPlan": {
            "type": "object",
            "properties": {
                "semesters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StudyPlanSemester"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "StudyPlanSemester": {
            "type": "object",
            "properties": {
                "sections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SemesterSection"
                    }
                },
                "semester": {
                    "type": "integer"
                }
            }
        },
        "Teacher": {
            "type": "object",
            "properties": {
                "desc": {
                    "type": "string",
                    "example": "Департамент гуманитарных наук"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0001-2345-6789-000000005451"
                },
                "title": {
                    "type": "string",
                    "example": "Махаматов Таир"
                }
            }
        },
        "TeacherGroup": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "disciplines": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "github_com_Xenous-Inc_finapp-api_internal_dto.Term": {
            "type": "object",
            "properties": {
                "exam": {
                    "type": "integer"
                },
                "external_id": {
                    "type": "string"
                },
                "kp": {
                    "type": "integer"
                },
                "kr": {
                    "type": "integer"
                },
                "num": {
                    "type": "integer"
                },
                "test": {
                    "type": "integer"
                }
            }
        },
        "internal_dto.RecordBookSemesterItemData": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "itog": {
                    "type": "integer"
                },
                "lecturers": {
                    "type": "string"
                },
                "mark": {
                    "type": "integer"
                },
                "subject": {
                    "type": "string"
                },
                "t1": {
                    "type": "integer"
                },
                "t2": {
                    "type": "integer"
                },
                "uo": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:5051/",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "FinAppAPI",
	Description:      "This is a FinAppAPI Swaggers documentation. For any suggestions, questions and deals write me in Telegram: @dr3dnought",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
